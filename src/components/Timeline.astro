---
import type { Item } from "~/types";

export interface Props {
  items?: Array<Item>;
  classes?: Record<string, string>;
}

const { items = [] } = Astro.props as Props;

---

<div class="wrapper">
  <div class="steps" id="steps">
    {
      items && items.length && (
        <div>
          {items.map(({ title, description, icon }, index = 0) => (
            <div class="step">
              <div class="number">ðŸ–‚ </div>
              <div class="info">
                <p class="title">{title}</p>
                <p class="text">{description}</p>
              </div>
            </div>
          ))}
        </div>
      )
    }
  </div>
</div>

<style>
  *,
  *:before,
  *:after {
    box-sizing: border-box;
  }

  .wrapper {
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .steps {

    margin: 0 auto;
  }

  .step {
    display: flex;
    position: relative;

    &:after {
      content: "";
      position: absolute;
      left: 15px;
      top: 32px;
      height: 0;
      width: 2px;
      background-color: red;
    }

    .info {
      margin: 8px 0 20px;
    }

    .title {
      font-size: 16px;
      font-weight: 600;
      margin: 0 0 8px;
      color: #000;
    }

    .text {
      font-size: 12px;
      color: rgba(#000, 0.7);
      padding-bottom: 0;
      margin: 0;
    }

    &:not(:last-child) {
      &:after {
        height: 100%;
      }
    }
  }

  .number {
    width: 32px;
    height: 32px;
    background-color: white;
    border-radius: 50%;
    border: 2px solid red;
    flex-shrink: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    color: red;
    font-size: 15px;
    font-weight: 600;
    margin-right: 14px;

    &.completed {
      background-color: red;
    }

    svg {
      width: 16px;
      height: 16px;
      object-fit: contain;

      path {
        fill: white;
      }
    }
  }
</style>
