---
import { transitionEnabledOnThisPage } from "astro/virtual-modules/transitions-router.js";

const { items = [] } = Astro.props;
---
<section class="accordion"></section>
{
    items.map(({ title, description, icon, image, number = {} }) => (
      <div class="tab">
        <input type="checkbox" name={number} id={number} >
        <label for={number} class="tab__label">{title}</label>
        <div class="tab__content">
        <p>{description}.</p>
      </div>
      </div>
    ))
  }
  </section>
  
  

  <style>

*, *::before, *::after {
  box-sizing: border-box;
}

/* Core styles/functionality */
.tab {
  position: relative;
}
.tab input {
  position: absolute;
  opacity: 0;
  z-index: -1;
}
.tab__content {
  max-height: 0;
  overflow: hidden;
  transition: all 0.35s;
}
.tab input:checked ~ .tab__content {
  max-height: 10rem;
}

/* Visual styles */
.accordion {
  color: #000;
  border: 2px solid;
  border-radius: 0.5rem;
  overflow: hidden;
}
.tab__label,
.tab__close {
  display: flex;
  color: #000;
  background: var(--theme);
  cursor: pointer;
}
.tab__label {
  justify-content: space-between;
  padding: 1rem;
}
.tab__label::after {
  content: "\276F";
  width: 1em;
  height: 1em;
  text-align: center;
  transform: rotate(90deg);
  transition: all 0.35s;
}
.tab input:checked + .tab__label::after {
  transform: rotate(270deg);
}
.tab__content p {
  margin: 0;
  padding: 1rem;
}
.tab__close {
  justify-content: flex-end;
  padding: 0.5rem 1rem;
  font-size: 0.75rem;
}

/* Arrow animation */

@keyframes bounce {
  25% {
    transform: rotate(90deg) translate(.25rem);
  }
  75% {
    transform: rotate(90deg) translate(-.25rem);
  }
}

  </style>